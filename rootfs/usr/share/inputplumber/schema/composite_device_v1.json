{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$ref": "#/definitions/CompositeDevice",
  "definitions": {
    "CompositeDevice": {
      "description": "Describes the source devices to aggregate",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "version": {
          "description": "Schema version number",
          "type": "integer"
        },
        "kind": {
          "description": "The type of configuration schema",
          "type": "string"
        },
        "name": {
          "description": "Name of the composite device mapping",
          "type": "string"
        },
        "matches": {
          "description": "Only use this profile if *any* of the given DMI system matches match. If this list is empty, then the source devices will *always* be checked.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Match"
          }
        },
        "source_devices": {
          "description": "One or more source devices to combine into a single virtual device. The events from these devices will be watched and translated according to the event map.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceDevice"
          }
        },
        "capability_map_id": {
          "description": "The ID of a device event mapping in the 'capability_maps' directory",
          "type": "string"
        },
        "target_devices": {
          "description": "Target input device(s) to emulate. Can be one of ['mouse', 'keyboard', 'gamepad', 'xb360'].",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "mouse",
              "keyboard",
              "gamepad",
              "xb360",
              "deck",
              "ds5",
              "ds5-usb",
              "ds5-bt",
              "ds5-edge",
              "ds5-edge-usb",
              "ds5-edge-bt",
              "touchscreen-fts3528"
            ]
          }
        }
      },
      "required": [
        "kind",
        "matches",
        "name",
        "source_devices",
        "version"
      ],
      "title": "CompositeDevice"
    },
    "Match": {
      "description": "Only use this configuration if *any* of the given items match the system. If this list is empty, then matching source devices will always create a CompositeDevice.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "dmi_data": {
          "$ref": "#/definitions/DMIMatch"
        }
      },
      "title": "Match"
    },
    "DMIMatch": {
      "description": "Match DMI system data",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "bios_release": {
          "description": "BIOS release to match found at /sys/class/dmi/id/bios_release",
          "type": "string"
        },
        "bios_vendor": {
          "description": "BIOS vendor to match found at /sys/class/dmi/id/bios_vendor",
          "type": "string"
        },
        "bios_version": {
          "description": "BIOS version to match found at /sys/class/dmi/id/bios_version",
          "type": "string"
        },
        "board_name": {
          "description": "Board name to match found at /sys/class/dmi/id/board_name",
          "type": "string"
        },
        "product_name": {
          "description": "Product name to match found at /sys/class/dmi/id/product_name",
          "type": "string"
        },
        "product_version": {
          "description": "Product version to match found at /sys/class/dmi/id/product_version",
          "type": "string"
        },
        "product_sku": {
          "description": "Product SKU to match found at /sys/class/dmi/id/product_sku",
          "type": "string"
        },
        "sys_vendor": {
          "description": "System vendor to match found at /sys/class/dmi/id/sys_vendor",
          "type": "string"
        },
        "cpu_vendor": {
          "description": "CPU vendor to match from 'lscpu'",
          "type": "string"
        }
      },
      "required": [],
      "title": "Match"
    },
    "SourceDevice": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "group": {
          "description": "Custom group identifier for the source device. This is used by the event mappings to determine what source inputs should be mapped.",
          "type": "string",
          "enum": [
            "keyboard",
            "mouse",
            "gamepad",
            "imu"
          ]
        },
        "ignore": {
          "description": "If true, this source device will be ignored and not managed by InputPlumber. Defaults to false.",
          "type": "boolean",
          "default": false
        },
        "blocked": {
          "description": "If true, device will be grabbed but no events from this device will reach target devices. Defaults to false.",
          "type": "boolean",
          "default": false
        },
        "evdev": {
          "$ref": "#/definitions/Evdev"
        },
        "hidraw": {
          "$ref": "#/definitions/Hidraw"
        },
        "iio": {
          "$ref": "#/definitions/IIO"
        },
        "unique": {
          "description": "If false, any devices matching this description will be added to the existing composite device. Defaults to true.",
          "type": "boolean"
        }
      },
      "required": [
        "group"
      ],
      "title": "SourceDevice"
    },
    "Evdev": {
      "description": "Source device to manage. Properties support globbing patterns.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "description": "Name of the source device defined in /proc/bus/input/devices",
          "type": "string"
        },
        "handler": {
          "description": "Event handler for the source device in /dev/input",
          "type": "string"
        },
        "phys_path": {
          "description": "Phys path as defined in /proc/bus/input/devices",
          "type": "string"
        },
        "vendor_id": {
          "description": "ID Vendor defined in /proc/bus/input/devices",
          "type": "string"
        },
        "product_id": {
          "description": "ID Product defined in /proc/bus/input/devices",
          "type": "string"
        }
      },
      "required": [],
      "title": "Evdev"
    },
    "Hidraw": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "handler": {
          "description": "HIDRaw handler for the source device in /dev/hidraw*",
          "type": "string"
        },
        "vendor_id": {
          "type": "integer"
        },
        "product_id": {
          "type": "integer"
        },
        "interface_num": {
          "type": "integer"
        }
      },
      "title": "Hidraw"
    },
    "IIO": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "id": {
          "description": "IIO handler for the source device in /sys/bus/iio/devices/*",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mount_matrix": {
          "$ref": "#/definitions/MountMatrix"
        }
      },
      "title": "IIO"
    },
    "MountMatrix": {
      "type": "object",
      "description": "Custom mount matrix to use to define how sensors are physically mounted",
      "additionalProperties": false,
      "properties": {
        "x": {
          "description": "Matrix for x value",
          "type": "array",
          "minItems": 3,
          "maxItems": 3,
          "items": {
            "type": "number"
          }
        },
        "y": {
          "description": "Matrix for y value",
          "type": "array",
          "minItems": 3,
          "maxItems": 3,
          "items": {
            "type": "number"
          }
        },
        "z": {
          "description": "Matrix for z value",
          "type": "array",
          "minItems": 3,
          "maxItems": 3,
          "items": {
            "type": "number"
          }
        }
      },
      "required": [
        "x",
        "y",
        "z"
      ]
    }
  }
}
