//! Reference: https://gitlab.com/open-sd/opensd/-/blob/main/src/opensdd/drivers/gamepad/hid_reports.hpp
#![allow(warnings)]
use packed_struct::prelude::*;

/// Different reports types
// When in some modes there's another report decriptor with the same ID
// as the touchpad whic is a keyboard with macros tied to different buttons.
// Not useful, I haven't enumerated this report here.
pub enum ReportType {
    TouchpadData = 0x01,
    MouseDataFPS = 0x02, // Same as Mouse Data in FPS mode, includes optical data
    XInputData = 0x04,   // Always available and always has access to all buttons
    DInputDataLeft = 0x07, // Left Stick, single side detached
    DInputDataRight = 0x08, // Right Stick, single side detached
    MouseData = 0x09,    // Mouse events while in gamepad mode
}

impl ReportType {
    pub fn to_u8(&self) -> u8 {
        match self {
            ReportType::TouchpadData => ReportType::TouchpadData as u8,
            ReportType::MouseDataFPS => ReportType::MouseDataFPS as u8,
            ReportType::XInputData => ReportType::XInputData as u8,
            ReportType::DInputDataLeft => ReportType::DInputDataLeft as u8,
            ReportType::DInputDataRight => ReportType::DInputDataRight as u8,
            ReportType::MouseData => ReportType::MouseData as u8,
        }
    }
}
//XInputData
//
//
// No Input
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,   99 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000015.817820 64 04 3c 74 01 00 64 04 63 04 01 01 01 02 02 80 80 80 80 00 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Axes
//
// Left Stick Right
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 ,   -1 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000003.938371 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 ff 80 80 80 00 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Left Stick Left
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 ,    0 , -111 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000009.335838 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 00 91 80 80 00 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Left Stick Up
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -124 ,    0 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000002.496028 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 84 00 80 80 00 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Left Stick Down
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -125 ,   -1 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000002.015918 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 83 ff 80 80 00 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
//
// Right Stick Right
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 ,   -1 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000002.666060 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 ff 80 00 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Right Stick Left
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 ,    0 , -125 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000002.159802 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 00 83 00 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Right Stick Up
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 ,  117 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000002.015937 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 75 00 00 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Right Stick Down
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 ,  125 ,   -1 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000001.800014 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 7d ff 00 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
//
// Touchpad
//
// Touchpad Top Left
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,   81 ,    0 ,  107 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000312.287997 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 00 00 00 00 00 00 02 80 00 51 00 6b 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Touchpad Top Right
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    3 , -116 ,    0 ,  102 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000004.201679 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 00 00 00 00 00 00 02 80 03 8c 00 66 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Touchpad Bottom Left
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,  114 ,    3 , -109 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000002.543948 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 00 00 00 00 00 00 02 80 00 72 03 93 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Touchpad Bottom Right
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    3 ,  -43 ,    3 ,  -64 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000004.488500 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 00 00 00 00 00 00 02 80 03 d5 03 c0 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Touchpad Hold has no effect
//
// Mouse
//
// Mouse Z (Wheel)
// ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 ,   -1 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -109 ,  125 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000017.760114 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 00 00 00 00 00 00 02 ff 00 00 00 00 80 80 93 7d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Mose X/Y fro mFPS mode only available on Report ID 2
//
// TODO:Accelerometer
// Somehow this has pitch, roll, and yaw in two 8 bit numbers. Perhaps it is incomplete (only two), or each
// number is 5 bits? Reslution of 31 is really low. bytes 29 and 30 are left controller, 31 and 32
// are right controller.
// Also note bytes 6, 8, 11, and 12. These change when the controller is synced either docked
// or wireless and indicate the mode for each side. 6 and 11 correspond to if the left
// controller is docked 6:4, 11:2 or wireless 6:1, 11:3. 7 and 12 are for the right controller,
// same numbers.
//
// Battery Indicators
// 5 and 7 are left/right controller battery level, 0-100
//
// Left Accel
// Not sure what the different numbers mean yet
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,   99 ,    1 ,   99 ,    1 ,    1 ,    1 ,    1 ,    3 ,    3 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 ,  -16 ,  -67 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000005.807918 64 04 3c 74 01 00 63 01 63 01 01 01 01 03 03 80 80 80 80 00 00 00 00 00 00 02 80 00 00 00 00 f0 bd 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
// Right Accel
// Not sure what the different numbers mean yet
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,   99 ,    1 ,   99 ,    1 ,    1 ,    1 ,    1 ,    3 ,    3 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 ,   38 ,   38 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000004.681945 64 04 3c 74 01 00 63 01 63 01 01 01 01 03 03 80 80 80 80 00 00 00 00 00 00 02 80 00 00 00 00 80 80 26 26 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Buttons
//
// Legion
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,   99 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000006.985969 64 04 3c 74 01 00 64 04 63 04 01 01 01 02 02 80 80 80 80 80 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Quick Settings
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,   99 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,   64 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000004.727910 64 04 3c 74 01 00 64 04 63 04 01 01 01 02 02 80 80 80 80 40 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Left Stick
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 ,  122 ,  122 , -128 , -128 ,   32 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000033.939427 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 7a 7a 80 80 20 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Right Stick
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 ,  127 , -128 ,   16 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000004.656012 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 7f 80 10 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// D Pad Up
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    8 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000124.808576 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 08 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// D Pad Down
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    4 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000002.087996 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 04 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// D Pad Left
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    2 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000004.823918 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 02 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// D Pad Right
// E: 000001.895884 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 01 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    1 ,    0 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000001.919879 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 01 00 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// A
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 , -128 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000002.471810 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 00 80 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// B
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,   64 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000002.135728 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 00 40 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// X
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,   32 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000002.447984 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 00 20 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Y
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,   16 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000002.039957 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 00 10 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// LB
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    8 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000011.640162 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 00 08 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Left Trigger
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 ,  126 , -128 , -128 ,    0 ,    4 ,    0 ,    0 ,   -1 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000008.231988 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 7e 80 80 00 04 00 00 ff 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// M1/RB
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,   99 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    2 ,    0 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000018.817796 64 04 3c 74 01 00 64 04 63 04 01 01 01 02 02 80 80 80 80 00 02 00 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Right Trigger
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    1 ,    0 ,    0 ,    0 ,   -1 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000001.728122 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 00 01 00 00 00 ff 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Y1
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,   99 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    0 , -128 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000002.543996 64 04 3c 74 01 00 64 04 63 04 01 01 01 02 02 80 80 80 80 00 00 80 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Y2
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,   99 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    0 ,   64 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000002.807928 64 04 3c 74 01 00 64 04 63 04 01 01 01 02 02 80 80 80 80 00 00 40 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Y3
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,   99 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    0 ,   32 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000002.496009 64 04 3c 74 01 00 64 04 63 04 01 01 01 02 02 80 80 80 80 00 00 20 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// M2
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,   99 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    8 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000008.759948 64 04 3c 74 01 00 64 04 63 04 01 01 01 02 02 80 80 80 80 00 00 08 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// M3
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    4 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
//E: 000004.079905 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 00 00 04 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Select
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,   99 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    2 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000004.440004 64 04 3c 74 01 00 64 04 63 04 01 01 01 02 z02 80 80 80 80 00 00 02 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Start
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,   99 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    1 ,    0 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000003.383926 64 04 3c 74 01 00 64 04 63 04 01 01 01 02 02 80 80 80 80 00 00 01 00 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Mouse Wheel Click
// # ReportID: 4 / 0xffa00003:   60 ,  116 ,    1 ,    0 ,  100 ,    4 ,  100 ,    4 ,    1 ,    1 ,    1 ,    2 ,    2 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 , -128 ,    0 ,    0 ,    2 , -128 ,    0 ,    0 ,    0 ,    0 , -128 , -128 , -128 , -128 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0 ,    0
// E: 000005.111268 64 04 3c 74 01 00 64 04 64 04 01 01 01 02 02 80 80 80 80 00 00 00 80 00 00 02 80 00 00 00 00 80 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
#[derive(PackedStruct, Debug, Copy, Clone, PartialEq)]
#[packed_struct(bit_numbering = "msb0", size_bytes = "60")]
pub struct XInputDataReport {
    #[packed_field(bytes = "0")]
    pub report_id: u8,
    #[packed_field(bytes = "1")]
    pub report_size: u8,

    #[packed_field(bytes = "2")]
    pub unk_2: u8,
    #[packed_field(bytes = "3")]
    pub unk_3: u8,
    #[packed_field(bytes = "4")]
    pub unk_4: u8,

    #[packed_field(bytes = "5")]
    pub l_controller_battery: u8,
    #[packed_field(bytes = "6")]
    pub l_controller_mode0: u8,
    #[packed_field(bytes = "7")]
    pub r_controller_battery: u8,
    #[packed_field(bytes = "8")]
    pub r_controller_mode0: u8,

    #[packed_field(bytes = "9")]
    pub gamepad_mode: u8,
    #[packed_field(bytes = "10")]
    pub unk_10: u8,
    #[packed_field(bytes = "11")]
    pub unk_11: u8,

    #[packed_field(bytes = "12")]
    pub l_controller_mode1: u8,
    #[packed_field(bytes = "13")]
    pub r_controller_mode1: u8,

    #[packed_field(byte = "14", endian = "lsb")]
    pub l_stick_x: u8,
    #[packed_field(byte = "15", endian = "lsb")]
    pub l_stick_y: u8,
    #[packed_field(bytes = "16", endian = "lsb")]
    pub r_stick_x: u8,
    #[packed_field(bytes = "17", endian = "lsb")]
    pub r_stick_y: u8,

    // BYTE 18: Legion (-128) quick settings (64) left stick (32) right stick (16) Dpad up (8) down (4) left (2) right (1)
    #[packed_field(bits = "144")]
    pub legion: bool,
    #[packed_field(bits = "145")]
    pub quick_access: bool,
    #[packed_field(bits = "146")]
    pub thumb_l: bool,
    #[packed_field(bits = "147")]
    pub thumb_r: bool,
    #[packed_field(bits = "148")]
    pub up: bool,
    #[packed_field(bits = "149")]
    pub down: bool,
    #[packed_field(bits = "150")]
    pub left: bool,
    #[packed_field(bits = "151")]
    pub right: bool,

    // BYTE 19: A (-128) B (64) X (32) Y (16) LB (8) Trigger Left (4) RB (2) Trigger Right (1)  (Digital Triggers)
    #[packed_field(bits = "152")]
    pub a: bool,
    #[packed_field(bits = "153")]
    pub b: bool,
    #[packed_field(bits = "154")]
    pub x: bool,
    #[packed_field(bits = "155")]
    pub y: bool,
    #[packed_field(bits = "156")]
    pub lb: bool,
    #[packed_field(bits = "157")]
    pub d_trigger_l: bool,
    #[packed_field(bits = "158")]
    pub rb: bool,
    #[packed_field(bits = "159")]
    pub d_trigger_r: bool,

    // BYTE 20: Y1 (-128) Y2 (64) Y3 (32) M2 (8) M3 (4) View (2) Menu (1)
    #[packed_field(bits = "160")]
    pub y1: bool,
    #[packed_field(bits = "161")]
    pub y2: bool,
    #[packed_field(bits = "162")]
    pub y3: bool,
    #[packed_field(bits = "163")]
    pub unk_20_4: bool,
    #[packed_field(bits = "164")]
    pub m2: bool,
    #[packed_field(bits = "165")]
    pub m3: bool,
    #[packed_field(bits = "166")]
    pub view: bool,
    #[packed_field(bits = "167")]
    pub menu: bool,

    // BYTE 21: Mouse Wheel Click (-128)
    #[packed_field(bits = "168")]
    pub mouse_click: bool,
    #[packed_field(bits = "169")]
    pub unk_21_1: bool,
    #[packed_field(bits = "170")]
    pub unk_21_2: bool,
    #[packed_field(bits = "171")]
    pub unk_21_3: bool,
    #[packed_field(bits = "172")]
    pub unk_21_4: bool,
    #[packed_field(bits = "173")]
    pub unk_21_5: bool,
    #[packed_field(bits = "174")]
    pub unk_21_6: bool,
    #[packed_field(bits = "175")]
    pub unk_21_7: bool,

    #[packed_field(bytes = "22")]
    pub a_trigger_l: u8,
    #[packed_field(bytes = "23")]
    pub a_trigger_r: u8,

    #[packed_field(bytes = "24")]
    pub unk_23: u8,

    #[packed_field(bytes = "25")]
    pub mouse_z: i8,

    #[packed_field(bytes = "26..=27", endian = "msb")]
    pub touch_x_0: u16,
    #[packed_field(bytes = "28..=29", endian = "msb")]
    pub touch_y_0: u16,

    #[packed_field(bytes = "30")]
    pub left_gyro_x: u8,
    #[packed_field(bytes = "31")]
    pub left_gyro_y: u8,
    #[packed_field(bytes = "32")]
    pub right_gyro_x: u8,
    #[packed_field(bytes = "33")]
    pub right_gyro_y: u8,

    #[packed_field(bytes = "34")]
    pub unk_34: u8,
    #[packed_field(bytes = "35")]
    pub unk_35: u8,
    #[packed_field(bytes = "36")]
    pub unk_36: u8,
    #[packed_field(bytes = "37")]
    pub unk_37: u8,
    #[packed_field(bytes = "38")]
    pub unk_38: u8,
    #[packed_field(bytes = "39")]
    pub unk_39: u8,
    #[packed_field(bytes = "40")]
    pub unk_40: u8,
    #[packed_field(bytes = "41")]
    pub unk_41: u8,
    #[packed_field(bytes = "42")]
    pub unk_42: u8,
    #[packed_field(bytes = "43")]
    pub unk_43: u8,
    #[packed_field(bytes = "44")]
    pub unk_44: u8,
    #[packed_field(bytes = "45")]
    pub unk_45: u8,
    #[packed_field(bytes = "46")]
    pub unk_46: u8,
    #[packed_field(bytes = "47")]
    pub unk_47: u8,
    #[packed_field(bytes = "48")]
    pub unk_48: u8,
    #[packed_field(bytes = "49")]
    pub unk_49: u8,
    #[packed_field(bytes = "50")]
    pub unk_50: u8,
    #[packed_field(bytes = "51")]
    pub unk_51: u8,
    #[packed_field(bytes = "52")]
    pub unk_52: u8,
    #[packed_field(bytes = "53")]
    pub unk_53: u8,
    #[packed_field(bytes = "54")]
    pub unk_54: u8,
    #[packed_field(bytes = "55")]
    pub unk_55: u8,
    #[packed_field(bytes = "56")]
    pub unk_56: u8,
    #[packed_field(bytes = "57")]
    pub unk_57: u8,
    #[packed_field(bytes = "58")]
    pub unk_58: u8,
    #[packed_field(bytes = "59")]
    pub unk_59: u8,
}
// KeyboardData
//
// No Input
//
// # ReportID: 1 / LeftControl: 0 | LeftShift: 0 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000']
// E: 000004.865592 15 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00
////
// Left Trigger
// # ReportID: 1 / LeftControl: 0 | LeftShift: 1 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000']
// E: 000004.753924 15 01 02 00 00 00 00 00 00 00 00 00 00 00 00 00
//
// Left Stick Up
// # ReportID: 1 / LeftControl: 0 | LeftShift: 0 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', 'w and W', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000']
// E: 000367.791434 15 01 00 00 00 00 00 00 00 00 1a 00 00 00 00 00
//
// Left Sitck Down
// # ReportID: 1 / LeftControl: 0 | LeftShift: 0 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', 's and S', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000']
// E: 000003.931965 15 01 00 00 00 00 00 00 00 00 16 00 00 00 00 00
//
// Left Stick Left
// # ReportID: 1 / LeftControl: 0 | LeftShift: 0 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', 'a and A', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000']
// E: 000002.831953 15 01 00 00 00 00 00 00 00 00 04 00 00 00 00 00
//
// Left Stick Rightr
// # ReportID: 1 / LeftControl: 0 | LeftShift: 0 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', 'd and D', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000']
// E: 000002.225987 15 01 00 00 00 00 00 00 00 00 07 00 00 00 00 00
//
// Dpad Up
// # ReportID: 1 / LeftControl: 0 | LeftShift: 0 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '1 and !', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000']
// E: 000002.371978 15 01 00 00 00 00 00 00 00 00 1e 00 00 00 00 00
//
// Dpad Down
// # ReportID: 1 / LeftControl: 0 | LeftShift: 0 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '3 and #', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000']
// E: 000002.801907 15 01 00 00 00 00 00 00 00 00 20 00 00 00 00 00
//
// Dpad Left
// # ReportID: 1 / LeftControl: 0 | LeftShift: 0 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '2 and @', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000']
// E: 000002.470040 15 01 00 00 00 00 00 00 00 00 1f 00 00 00 00 00
//
// Dpad Right
// # ReportID: 1 / LeftControl: 0 | LeftShift: 0 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '4 and $', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000']
// E: 000002.330045 15 01 00 00 00 00 00 00 00 00 21 00 00 00 00 00
// Menu
// # ReportID: 1 / LeftControl: 0 | LeftShift: 0 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', 'Tab', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000']
// E: 000136.626807 15 01 00 00 00 00 00 00 00 00 2b 00 00 00 00 00
//
// View
// # ReportID: 1 / LeftControl: 0 | LeftShift: 0 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', 'ESCAPE', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000']
// E: 000002.290003 15 01 00 00 00 00 00 00 00 00 29 00 00 00 00 00
//
// Left Stick Click
// # ReportID: 1 / LeftControl: 0 | LeftShift: 0 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', 'm and M', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000']
// E: 000002.780003 15 01 00 00 00 00 00 00 00 00 10 00 00 00 00 00
//
// Y1
// # ReportID: 1 / LeftControl: 0 | LeftShift: 0 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', 'Spacebar', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000']
// E: 000004.641655 15 01 00 00 00 00 00 00 00 00 2c 00 00 00 00 00
//
// Any key can be in any position, up to 6 keys + LeftShift can be held. Eg. Here is left stick up
// and left, Y1, and Left trigger   .
// # ReportID: 1 / LeftControl: 0 | LeftShift: 1 | LeftAlt: 0 | Left GUI: 0 | RightControl: 0 | RightShift: 0 | RightAlt: 0 | Right GUI: 0 | # |Keyboard ['0x70000', '0x70000', '0x70000', '0x70000', '0x70000', '0x70000', 'w and W', 'a and A', 'Spacebar', '0x70000', '0x70000', '0x70000']
// E: 000008.229872 15 01 02 00 00 00 00 00 00 00 1a 04 2c 00 00 00
#[derive(PackedStruct, Debug, Copy, Clone, PartialEq)]
#[packed_struct(bit_numbering = "msb0", size_bytes = "15")]
pub struct KeyboardDataReport {
    #[packed_field(bytes = "0")]
    pub report_id: u8,
    #[packed_field(bytes = "1")]
    pub report_size: u8,
}

//
// DInpuit doesn't have a complete implementation. Triggers and some buttons are not active. Two
// identical reports, 7 and 8, indicate if the left or right controller is where the information is
// coming from.
//
// DInputDataLeft
// X and Y report backwards here.
// No Input
// # ReportID: 7 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000031.877403 13 08 00 08 80 00 08 80 08 00 00 00 00 00
//
// Axes
//
// Left Stick Right
// # ReportID: 7 / X:  2048 | Y:     0 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000031.876378 13 07 00 08 00 00 08 80 08 00 00 00 00 00
//
// Left stick Left
// # ReportID: 7 / X:  2112 | Y:  4095 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000004.423802 13 07 40 f8  00 08 80 08 00 00 00 00 00
//
// Left Stick Up
// # ReportID: 7 / X:     0 | Y:  2543 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000001.740083 13 07 00 f0 9e 00 08 80 08 00 00 00 00 00
//
// Left Stick Down
// # ReportID: 7 / X:  4095 | Y:  1743 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000013.201891 13 07 ff ff 6c 00 08 80 08 00 00 00 00 00
//
// Buttons
//
// D Pad Left
// # ReportID: 7 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000003.169857 13 07 00 08 80 00 08 80 08 01 00 00 00 00
//
// D Pad Down
// # ReportID: 7 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000002.826586 13 07 00 08 80 00 08 80 08 02 00 00 00 00
//
// D Pad Up
// # ReportID: 7 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000007.174470 13 07 00 08 80 00 08 80 08 04 00 00 00 00
//
// D Pad Right
// # ReportID: 7 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000002.173395 13 07 00 08 80 00 08 80 08 08 00 00 00 00
//
// Y1
// # ReportID: 7 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000005.835819 13 07 00 08 80 00 08 80 08 10 00 00 00 00
//
// Y2
// # ReportID: 7 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000002.618187 13 07 00 08 80 00 08 80 08 20 00 00 00 00
//
// Select
// # ReportID: 7 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000012.496586 13 07 00 08 80 00 08 80 08 40 00 00 00 00
//
// Start
// # ReportID: 7 / X:  2048 | Yz  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000002.754038 13 07 00 08 80 00 08 80 08 80 00 00 00 00
//
// # ReportID: 7 / X:  1808 | Y:  3247 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000004.928909 13 07 10 f7 ca 00 08 80 08 00 00 00 00 00 caf = 3247
// # ReportID: 7 / X:  2480 | Y:  2063 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000012.289568 13 07 b0 f9 80 00 08 80 08 00 00 00 00 00 9b0 = 2480

#[derive(PackedStruct, Debug, Copy, Clone, PartialEq)]
#[packed_struct(bit_numbering = "msb0", size_bytes = "13")]
pub struct DInputDataLeftReport {
    #[packed_field(bytes = "0")]
    pub report_id: u8,

    // Axes
    #[packed_field(bytes = "1", endian = "lsb")]
    pub l_stick_y_lg: u8,
    #[packed_field(bits = "16..=19", endian = "lsb")]
    pub l_stick_x_sm: Integer<u8, packed_bits::Bits<4>>,
    #[packed_field(bits = "20..=23", endian = "lsb")]
    pub l_stick_y_sm: Integer<u8, packed_bits::Bits<4>>,
    #[packed_field(bytes = "3", endian = "lsb")]
    pub l_stick_x_lg: u8,

    // Buttons
    #[packed_field(bits = "72")]
    pub left: bool,
    #[packed_field(bits = "73")]
    pub down: bool,
    #[packed_field(bits = "74")]
    pub up: bool,
    #[packed_field(bits = "75")]
    pub right: bool,
    #[packed_field(bits = "76")]
    pub y1: bool,
    #[packed_field(bits = "77")]
    pub y2: bool,
    #[packed_field(bits = "78")]
    pub view: bool,
    #[packed_field(bits = "79")]
    pub menu: bool,
}

// DInputDataRight
//
// No Input
// # ReportID: 8 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000031.877403 13 08 00 08 80 00 08 80 08 00 00 00 00 00
//
// Axes
//
// Right Stick Right
// # ReportID: 8 / X:  2015 | Y:  4095 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000006.268028 13 08 df f7 ff 00 08 80 08 00 00 00 00 00
//
// Right Stick Left
// # ReportID: 8 / X:  2127 | Y:     0 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000002.751401 13 08 4f 08 00 00 08 80 08 00 00 00 00 00
//
// Right stick Up
// # ReportID: 8 / X:  4095 | Y:  2272 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000004.429783 13 08 ff 0f 8e 00 08 80 08 00 00 00 00 00
//
// Right Stick Down
// # ReportID: 8 / X:     0 | Y:  2192 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000002.402128 13 08 00 00 89 00 08 80 08 00 00 00 00 00
//
//
// Buttons
//
// BTN B
// # ReportID: 8 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000003.239383 13 08 00 08 80 00 08 80 08 01 00 00 00 00
//
// BTN Y
// # ReportID: 8 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000002.726196 13 08 00 08 80 00 08 80 08 02 00 00 00 00
//
// BTN A
// # ReportID: 8 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000008.553870 13 08 00 08 80 00 08 80 08 04 00 00 00 00
//
// BTN X
// # ReportID: 8 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000009.883833 13 08 00 08 80 00 08 80 08 08 00 00 00 00
//
// Y3
// # ReportID: 8 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000004.087289 13 08 00 08 80 00 08 80 08 10 00 00 00 00
//
// M3
// # ReportID: 8 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000005.537981 13 08 00 08 80 00 08 80 08 20 00 00 00 00
//
// M2
// # ReportID: 8 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000011.902904 13 08 00 08 80 00 08 80 08 40 00 00 00 00
//
// Quick Access
// # ReportID: 8 / X:  2048 | Y:  2048 | Z:  2048 | Rz:  2048 | Hat switch:   8 | # | Button: 0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0 | Accelerator:    0 | Brake:    0 | #
// E: 000003.665268 13 08 00 08 80 00 08 80 08 80 00 00 00 00
#[derive(PackedStruct, Debug, Copy, Clone, PartialEq)]
#[packed_struct(bit_numbering = "msb0", size_bytes = "13")]
pub struct DInputDataRightReport {
    #[packed_field(bytes = "0")]
    pub report_id: u8,

    // Axes
    #[packed_field(bytes = "1", endian = "lsb")]
    pub r_stick_y_lg: u8,
    #[packed_field(bits = "16..=19", endian = "lsb")]
    pub r_stick_x_sm: Integer<u8, packed_bits::Bits<4>>,
    #[packed_field(bits = "20..=23", endian = "lsb")]
    pub r_stick_y_sm: Integer<u8, packed_bits::Bits<4>>,
    #[packed_field(bytes = "3", endian = "lsb")]
    pub r_stick_x_lg: u8,

    // Buttons
    #[packed_field(bits = "72")]
    pub b: bool,
    #[packed_field(bits = "73")]
    pub y: bool,
    #[packed_field(bits = "74")]
    pub a: bool,
    #[packed_field(bits = "75")]
    pub x: bool,
    #[packed_field(bits = "76")]
    pub y3: bool,
    #[packed_field(bits = "77")]
    pub m3: bool,
    #[packed_field(bits = "78")]
    pub m2: bool,
    #[packed_field(bits = "79")]
    pub quick_access: bool,
}

// MouseDataFPS, MouseData
// Mouse data cones from two identical repoorts with different report ID's.  Report ID 2 is active
// when the controler is in "FPS" mode. Report ID 9 is active when the controller is in Gamepad
// mode. The optical sensor only produces events when in "FPS" mode. The scroll wheel is always on
// one of these two reports. THe buttons are onyl active either when right controller is attached
// in gamepad more or detached in FPS mode and produce no events if detached in gamepad mode.
//
// Negative Y
// # ReportID: 2 / Button: 0  0  0  0  0 | # | X:     0 | Y:    -3 | Wheel:    0 | #
// E: 000079.980905 7 02 00 00 d0 ff 00 00
//
// Positive Y
// # ReportID: 2 / Button: 0  0  0  0  0 | # | X:     0 | Y:     4 | Wheel:    0 | #
// E: 000080.116978 7 02 00 00 40 00 00 00
//
// Negative X
// # ReportID: 2 / Button: 0  0  0  0  0 | # | X:    -2 | Y:     0 | Wheel:    0 | #
// E: 000080.308914 7 02 00 fe 0f 00 00 00
//
// Positive X
// # ReportID: 2 / Button: 0  0  0  0  0 | # | X:     5 | Y:     0 | Wheel:    0 | #
// E: 000080.168904 7 02 00 05 00 00 00 00
//
// Negative x/y
// # ReportID: 2 / Button: 0  0  0  0  0 | # | X:    -5 | Y:    -2 | Wheel:    0 | #
// E: 000080.012905 7 02 00 fb ef ff 00 00
//
// positive x/y
// # ReportID: 2 / Button: 0  0  0  0  0 | # | X:     3 | Y:     4 | Wheel:    0 | #
// E: 000080.140901 7 02 00 03 40 00 00 00
//
// Wheel Down
// # ReportID: 9 / Button: 0  0  0  0  0 | # | X:     0 | Y:     0 | Wheel:   -1 | #
// E: 000000.000000 7 09 00 00 00 00 ff 00
//
// Wheel Up
// # ReportID: 9 / Button: 0  0  0  0  0 | # | X:     0 | Y:     0 | Wheel:    1 | #
// E: 000031.815593 7 09 00 00 00 00 01 00
//
// Buttons
// M1/RB
// # ReportID: 2 / Button: 1  0  0  0  0 | # | X:     0 | Y:     0 | Wheel:    0 | #
// E: 000008.617821 7 02 01 00 00 00 00 00
//
// M2
// # ReportID: 2 / Button: 0  1  0  0  0 | # | X:     0 | Y:     0 | Wheel:    0 | #
// E: 000059.281125 7 02 02 00 00 00 00 00
//
// M3
// # ReportID: 2 / Button: 0  0  0  1  0 | # | X:     0 | Y:     0 | Wheel:    0 | #
// E: 000088.093102 7 02 08 00 00 00 00 00
//
// Y3
// # ReportID: 2 / Button: 0  0  0  0  1 | # | X:     0 | Y:     0 | Wheel:    0 | #
// E: 000106.102492 7 02 10 00 00 00 00 00
//
// Wheel Click
// # ReportID: 9 / Button: 0  0  1  0  0 | # | X:     0 | Y:     0 | Wheel:    0 | #
// E: 000070.303202 7 09 04 00 00 00 00 00
#[derive(PackedStruct, Debug, Copy, Clone, PartialEq)]
#[packed_struct(bit_numbering = "msb0", size_bytes = "7")]
pub struct MouseDataReport {
    // State
    #[packed_field(bytes = "0")]
    pub report_id: u8,

    // Buttons
    #[packed_field(bits = "8")]
    pub unk_1_0: bool,
    #[packed_field(bits = "9")]
    pub unk_1_1: bool,
    #[packed_field(bits = "10")]
    pub unk_1_2: bool,
    #[packed_field(bits = "11")]
    pub y3: bool,
    #[packed_field(bits = "12")]
    pub m3: bool,
    #[packed_field(bits = "13")]
    pub mouse_click: bool,
    #[packed_field(bits = "14")]
    pub m2: bool,
    #[packed_field(bits = "15")]
    pub m1: bool,

    // Axes
    #[packed_field(bits = "16..=27", endian = "lsb")]
    pub mouse_x: Integer<i16, packed_bits::Bits<12>>,
    #[packed_field(bits = "28..=39", endian = "msb")]
    pub mouse_y: Integer<i16, packed_bits::Bits<12>>,
    #[packed_field(bytes = "5")]
    pub mouse_z: i8,
    #[packed_field(bytes = "6")]
    pub report_count: u8,
}

// TouchpadData
//
// X Axis
// # ReportID: 1 / Confidence: 1 | Tip Switch: 0 | Contact Id:  0 | # | X:    588 | Y:      0
// #             | Confidence: 0 | Tip Switch: 0 | Contact Id:  0 | # | X:      0 | Y:      0
// #             | Confidence: 0 | Tip Switch: 0 | Contact Id:  0 | # | X:      0 | Y:      0 | Scan Time:  22108 | Contact Count:    1 | Button: 0 | #
// E: 000034.423207 20 01 01 4c 02 00 00 00 00 00 00 00 00 00 00 00 00 5c 56 01 00
//
// Y Axis
// # ReportID: 1 / Confidence: 1 | Tip Switch: 0 | Contact Id:  0 | # | X:      0 | Y:    968
// #             | Confidence: 0 | Tip Switch: 0 | Contact Id:  0 | # | X:      0 | Y:      0
// #             | Confidence: 0 | Tip Switch: 0 | Contact Id:  0 | # | X:      0 | Y:      0 | Scan Time:  60708 | Contact Count:    1 | Button: 0 | #
// E: 000115.698022 20 01 01 00 00 c8 03 00 00 00 00 00 00 00 00 00 00 24 ed 01 00
//
// Hold to Click
// # ReportID: 1 / Confidence: 1 | Tip Switch: 0 | Contact Id:  0 | # | X:    341 | Y:    512
// #             | Confidence: 1 | Tip Switch: 0 | Contact Id:  1 | # | X:    682 | Y:    512
// #             | Confidence: 0 | Tip Switch: 0 | Contact Id:  0 | # | X:      0 | Y:      0 | Scan Time:  34964 | Contact Count:    2 | Button: 0 | #
// E: 000143.247707 20 01 01 55 01 00 02 05 aa 02 00 02 00 00 00 00 00 94 88 02 00
#[derive(PackedStruct, Debug, Copy, Clone, PartialEq)]
#[packed_struct(bit_numbering = "msb0", size_bytes = "20")]
pub struct TouchpadDataReport {
    #[packed_field(bytes = "0")]
    pub report_id: u8,

    // BYTE 1
    #[packed_field(bits = "8")]
    pub unk_1_8: bool,
    #[packed_field(bits = "9")]
    pub unk_1_9: bool,
    #[packed_field(bits = "10")]
    pub unk_1_10: bool,
    #[packed_field(bits = "11")]
    pub unk_1_11: bool,
    #[packed_field(bits = "12")]
    pub unk_1_12: bool,
    #[packed_field(bits = "13")]
    pub contact_id_0: bool,
    #[packed_field(bits = "14")]
    pub tip_switch_0: bool,
    #[packed_field(bits = "15")]
    pub confidence_0: bool,

    #[packed_field(bytes = "2..=3", endian = "lsb")]
    pub touch_x_0: u16,
    #[packed_field(bytes = "4..=5", endian = "lsb")]
    pub touch_y_0: u16,

    // BYTE 6
    #[packed_field(bits = "48")]
    pub unk_6_0: bool,
    #[packed_field(bits = "49")]
    pub unk_6_1: bool,
    #[packed_field(bits = "50")]
    pub unk_6_2: bool,
    #[packed_field(bits = "51")]
    pub unk_6_3: bool,
    #[packed_field(bits = "52")]
    pub unk_6_4: bool,
    #[packed_field(bits = "53")]
    pub contact_id_1: bool,
    #[packed_field(bits = "54")]
    pub tip_switch_1: bool,
    #[packed_field(bits = "55")]
    pub confidence_1: bool,

    #[packed_field(bytes = "7..=8", endian = "lsb")]
    pub touch_x_1: u16,
    #[packed_field(bytes = "9..=10", endian = "lsb")]
    pub touch_y_1: u16,

    // BYTE 11
    #[packed_field(bits = "88")]
    pub unk_11_0: bool,
    #[packed_field(bits = "89")]
    pub unk_11_1: bool,
    #[packed_field(bits = "90")]
    pub unk_11_2: bool,
    #[packed_field(bits = "91")]
    pub unk_11_3: bool,
    #[packed_field(bits = "92")]
    pub unk_11_4: bool,
    #[packed_field(bits = "93")]
    pub contact_id_2: bool,
    #[packed_field(bits = "94")]
    pub tip_switch_2: bool,
    #[packed_field(bits = "95")]
    pub confidence_2: bool,

    #[packed_field(bytes = "12..=13", endian = "lsb")]
    pub touch_x_2: u16,
    #[packed_field(bytes = "14..=15", endian = "lsb")]
    pub touch_y_2: u16,

    #[packed_field(bytes = "16..=17", endian = "lsb")]
    pub scan_time: u16,
    #[packed_field(bytes = "18")]
    pub contact_count: u8,

    // BYTE 19
    #[packed_field(bits = "152")]
    pub unk_19_0: bool,
    #[packed_field(bits = "153")]
    pub unk_19_1: bool,
    #[packed_field(bits = "154")]
    pub unk_19_2: bool,
    #[packed_field(bits = "155")]
    pub unk_19_3: bool,
    #[packed_field(bits = "156")]
    pub unk_19_4: bool,
    #[packed_field(bits = "157")]
    pub unk_19_5: bool,
    #[packed_field(bits = "158")]
    pub unk_19_6: bool,
    #[packed_field(bits = "159")]
    pub unk_19_7: bool,
}
